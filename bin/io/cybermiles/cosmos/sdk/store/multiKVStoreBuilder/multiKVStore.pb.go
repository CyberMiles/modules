// Code generated by protoc-gen-go. DO NOT EDIT.
// source: multiKVStore.proto

/*
Package io_cybermiles_cosmos_sdk_store_multiKVStoreBuilder is a generated protocol buffer package.

It is generated from these files:
	multiKVStore.proto

It has these top-level messages:
	CacheMultiStoreBuf
	CacheKVStore
	CValue
	KVStore
*/
package io_cybermiles_cosmos_sdk_store_multiKVStoreBuilder

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CacheMultiStoreBuf struct {
	Db           *CacheKVStore                `protobuf:"bytes,1,opt,name=db" json:"db,omitempty"`
	NextVersion  int64                        `protobuf:"varint,2,opt,name=nextVersion" json:"nextVersion,omitempty"`
	LastCommitID *CacheMultiStoreBuf_CommitID `protobuf:"bytes,3,opt,name=lastCommitID" json:"lastCommitID,omitempty"`
	Substores    map[string]*CacheKVStore     `protobuf:"bytes,4,rep,name=substores" json:"substores,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *CacheMultiStoreBuf) Reset()                    { *m = CacheMultiStoreBuf{} }
func (m *CacheMultiStoreBuf) String() string            { return proto.CompactTextString(m) }
func (*CacheMultiStoreBuf) ProtoMessage()               {}
func (*CacheMultiStoreBuf) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CacheMultiStoreBuf) GetDb() *CacheKVStore {
	if m != nil {
		return m.Db
	}
	return nil
}

func (m *CacheMultiStoreBuf) GetNextVersion() int64 {
	if m != nil {
		return m.NextVersion
	}
	return 0
}

func (m *CacheMultiStoreBuf) GetLastCommitID() *CacheMultiStoreBuf_CommitID {
	if m != nil {
		return m.LastCommitID
	}
	return nil
}

func (m *CacheMultiStoreBuf) GetSubstores() map[string]*CacheKVStore {
	if m != nil {
		return m.Substores
	}
	return nil
}

type CacheMultiStoreBuf_CommitID struct {
	Version int64  `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Hash    []byte `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (m *CacheMultiStoreBuf_CommitID) Reset()                    { *m = CacheMultiStoreBuf_CommitID{} }
func (m *CacheMultiStoreBuf_CommitID) String() string            { return proto.CompactTextString(m) }
func (*CacheMultiStoreBuf_CommitID) ProtoMessage()               {}
func (*CacheMultiStoreBuf_CommitID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

func (m *CacheMultiStoreBuf_CommitID) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *CacheMultiStoreBuf_CommitID) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type CacheKVStore struct {
	// Mutex mtx = 1;
	Cache  map[string]*CValue `protobuf:"bytes,2,rep,name=cache" json:"cache,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Parent *KVStore           `protobuf:"bytes,3,opt,name=parent" json:"parent,omitempty"`
}

func (m *CacheKVStore) Reset()                    { *m = CacheKVStore{} }
func (m *CacheKVStore) String() string            { return proto.CompactTextString(m) }
func (*CacheKVStore) ProtoMessage()               {}
func (*CacheKVStore) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CacheKVStore) GetCache() map[string]*CValue {
	if m != nil {
		return m.Cache
	}
	return nil
}

func (m *CacheKVStore) GetParent() *KVStore {
	if m != nil {
		return m.Parent
	}
	return nil
}

type CValue struct {
	Value   []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Deleted bool   `protobuf:"varint,2,opt,name=deleted" json:"deleted,omitempty"`
	Dirty   bool   `protobuf:"varint,3,opt,name=dirty" json:"dirty,omitempty"`
}

func (m *CValue) Reset()                    { *m = CValue{} }
func (m *CValue) String() string            { return proto.CompactTextString(m) }
func (*CValue) ProtoMessage()               {}
func (*CValue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CValue) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *CValue) GetDeleted() bool {
	if m != nil {
		return m.Deleted
	}
	return false
}

func (m *CValue) GetDirty() bool {
	if m != nil {
		return m.Dirty
	}
	return false
}

type KVStore struct {
	Store []*KVStore_Model `protobuf:"bytes,1,rep,name=store" json:"store,omitempty"`
}

func (m *KVStore) Reset()                    { *m = KVStore{} }
func (m *KVStore) String() string            { return proto.CompactTextString(m) }
func (*KVStore) ProtoMessage()               {}
func (*KVStore) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *KVStore) GetStore() []*KVStore_Model {
	if m != nil {
		return m.Store
	}
	return nil
}

type KVStore_Model struct {
	Key   []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *KVStore_Model) Reset()                    { *m = KVStore_Model{} }
func (m *KVStore_Model) String() string            { return proto.CompactTextString(m) }
func (*KVStore_Model) ProtoMessage()               {}
func (*KVStore_Model) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 0} }

func (m *KVStore_Model) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *KVStore_Model) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*CacheMultiStoreBuf)(nil), "io.cybermiles.cosmos.sdk.store.multiKVStoreBuilder.CacheMultiStoreBuf")
	proto.RegisterType((*CacheMultiStoreBuf_CommitID)(nil), "io.cybermiles.cosmos.sdk.store.multiKVStoreBuilder.CacheMultiStoreBuf.CommitID")
	proto.RegisterType((*CacheKVStore)(nil), "io.cybermiles.cosmos.sdk.store.multiKVStoreBuilder.CacheKVStore")
	proto.RegisterType((*CValue)(nil), "io.cybermiles.cosmos.sdk.store.multiKVStoreBuilder.CValue")
	proto.RegisterType((*KVStore)(nil), "io.cybermiles.cosmos.sdk.store.multiKVStoreBuilder.KVStore")
	proto.RegisterType((*KVStore_Model)(nil), "io.cybermiles.cosmos.sdk.store.multiKVStoreBuilder.KVStore.Model")
}

func init() { proto.RegisterFile("multiKVStore.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 426 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0xcd, 0x6e, 0xd4, 0x30,
	0x14, 0x85, 0xe5, 0xcc, 0x4f, 0xa7, 0x77, 0x46, 0x08, 0x59, 0x5d, 0x44, 0x59, 0x45, 0x59, 0xcd,
	0xca, 0x48, 0xc3, 0xa6, 0x2a, 0x1b, 0xa0, 0xb0, 0x40, 0x55, 0xa1, 0xf2, 0x88, 0xb0, 0x4e, 0x62,
	0xa3, 0x89, 0x9a, 0xc4, 0x95, 0xed, 0x54, 0x64, 0xc3, 0x4b, 0xf0, 0x1a, 0x3c, 0x02, 0x0f, 0x87,
	0x72, 0x1d, 0xd3, 0x44, 0x62, 0xd3, 0x69, 0x77, 0x3e, 0xb6, 0xe7, 0x1c, 0xdf, 0xef, 0x8c, 0x02,
	0xb4, 0x6e, 0x2b, 0x5b, 0x5e, 0xa5, 0x7b, 0xab, 0xb4, 0x64, 0x77, 0x5a, 0x59, 0x45, 0x77, 0xa5,
	0x62, 0x45, 0x97, 0x4b, 0x5d, 0x97, 0x95, 0x34, 0xac, 0x50, 0xa6, 0x56, 0x86, 0x19, 0x71, 0xcb,
	0x0c, 0xde, 0x1a, 0xff, 0xe4, 0x7d, 0x5b, 0x56, 0x42, 0xea, 0xe4, 0xf7, 0x1c, 0xe8, 0x65, 0x56,
	0x1c, 0xe4, 0x75, 0x7f, 0x38, 0x1c, 0x7d, 0xa7, 0x37, 0x10, 0x88, 0x3c, 0x24, 0x31, 0xd9, 0xae,
	0x77, 0x6f, 0xd9, 0xe3, 0x7d, 0x19, 0x7a, 0x0e, 0x7b, 0x3c, 0x10, 0x39, 0x8d, 0x61, 0xdd, 0xc8,
	0x1f, 0x36, 0x95, 0xda, 0x94, 0xaa, 0x09, 0x83, 0x98, 0x6c, 0x67, 0x7c, 0xbc, 0x45, 0x0d, 0x6c,
	0xaa, 0xcc, 0xd8, 0x4b, 0x55, 0xd7, 0xa5, 0xfd, 0xf4, 0x21, 0x9c, 0x61, 0xfa, 0x97, 0xa3, 0xd3,
	0x27, 0x13, 0x31, 0x6f, 0xcb, 0x27, 0x21, 0xd4, 0xc0, 0xa9, 0x69, 0x73, 0x74, 0x32, 0xe1, 0x3c,
	0x9e, 0x6d, 0xd7, 0xbb, 0xaf, 0xcf, 0x94, 0xb8, 0xf7, 0xbe, 0x1f, 0x1b, 0xab, 0x3b, 0xfe, 0x90,
	0x13, 0xfd, 0x84, 0x17, 0xd3, 0x43, 0xfa, 0x12, 0x66, 0xb7, 0xb2, 0x43, 0xe0, 0xa7, 0xbc, 0x5f,
	0xd2, 0x14, 0x16, 0xf7, 0x59, 0xd5, 0x4a, 0x24, 0xf5, 0x1c, 0x25, 0x38, 0xbb, 0x8b, 0xe0, 0x9c,
	0x44, 0xe7, 0xb0, 0xfa, 0x07, 0x20, 0x84, 0x93, 0xfb, 0xa1, 0x13, 0x82, 0x9d, 0x78, 0x49, 0x29,
	0xcc, 0x0f, 0x99, 0x39, 0xe0, 0x03, 0x36, 0x1c, 0xd7, 0xc9, 0x9f, 0x00, 0x36, 0x63, 0x57, 0x9a,
	0xc1, 0xa2, 0xe8, 0x75, 0x18, 0x20, 0xbb, 0xab, 0xa7, 0x3e, 0xd3, 0x09, 0x47, 0xcc, 0x39, 0xd3,
	0x3d, 0x2c, 0xef, 0x32, 0x2d, 0x1b, 0x3b, 0xfc, 0x23, 0xde, 0x1c, 0x93, 0xe1, 0x29, 0x0c, 0x56,
	0x91, 0x05, 0x78, 0x48, 0xfa, 0x0f, 0xfe, 0x9b, 0x29, 0xfe, 0x8b, 0xa3, 0xe6, 0x4a, 0x7b, 0x87,
	0x11, 0xf8, 0xe4, 0x33, 0x2c, 0xdd, 0x26, 0x3d, 0xf3, 0xfe, 0x04, 0xe9, 0x3a, 0xd1, 0x97, 0x21,
	0x64, 0x25, 0xad, 0x14, 0x98, 0xbb, 0xe2, 0x5e, 0xf6, 0xf7, 0x45, 0xa9, 0x6d, 0x87, 0x0c, 0x56,
	0xdc, 0x89, 0xe4, 0x17, 0x81, 0x13, 0xdf, 0xc4, 0x37, 0x58, 0xe0, 0x53, 0x42, 0x82, 0x4d, 0xbc,
	0x7b, 0x02, 0x25, 0x76, 0xad, 0x84, 0xac, 0xb8, 0xf3, 0x8b, 0x5e, 0xc1, 0x02, 0xf5, 0x98, 0xd2,
	0xc6, 0x51, 0x3a, 0x1b, 0x53, 0xf2, 0x53, 0xe4, 0x4b, 0xfc, 0x1c, 0xbd, 0xfe, 0x1b, 0x00, 0x00,
	0xff, 0xff, 0x8e, 0xfc, 0x61, 0x6c, 0xa4, 0x04, 0x00, 0x00,
}
